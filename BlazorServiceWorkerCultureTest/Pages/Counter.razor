@page "/"
@using BlazorServiceWorkerCultureTest.Services
@using SpawnDev.BlazorJS
@using SpawnDev.BlazorJS.JSObjects
@implements IDisposable

<PageTitle>Counter</PageTitle>

<h1>Service Worker Test</h1>

<div>

    <button class="btn btn-primary" @onclick="IncrementCount">@(ServiceWorkerUpdateWatchService.InstallWaiting ? "Skip Waiting" : "Nothing to do")</button>

</div>
<div>
    Notification Permission: @(Notification.Permission ?? "unsupported")

    <button class="btn btn-primary" @onclick="EnableNotifications">Enable Notifications</button>
</div>

@code {
    private int currentCount = 0;

    [Inject]
    ServiceWorkerUpdateWatchService ServiceWorkerUpdateWatchService { get; set; } = default!;

    [Inject]
    BlazorJSRuntime JS { get; set; }

    bool NotificationPermissionGranted => Notification.Permission == "granted";
    bool NotificationPermissionDenied => Notification.Permission == "denied";
    bool NotificationPermissionDefault => Notification.Permission == "default";
    

    protected override void OnInitialized()
    {
        ServiceWorkerUpdateWatchService.OnServiceWorkerInstalled += OnServiceWorkerInstalled;
    }

    async Task EnableNotifications()
    {
        await Notification.RequestPermission();
    }

    void OnServiceWorkerInstalled()
    {
        StateHasChanged();
    }

    private void IncrementCount()
    {
        ServiceWorkerUpdateWatchService.TellServiceWorkerSkipWaiting();
    }
    public void Dispose()
    {
        ServiceWorkerUpdateWatchService.OnServiceWorkerInstalled -= OnServiceWorkerInstalled;
    }
}
